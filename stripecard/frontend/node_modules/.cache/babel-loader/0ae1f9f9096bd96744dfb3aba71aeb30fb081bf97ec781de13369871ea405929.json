{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\OneDrive\\\\Bussines\\\\AI-CONTENT\\\\Mine\\\\app\\\\components\\\\template - card\\\\my_component\\\\frontend\\\\src\\\\MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useElements } from '@stripe/react-stripe-js';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\n\n// Define props para CheckoutForm para manejar la clave pública de Stripe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Componente CheckoutForm para manejar la entrada del formulario de pago\nconst CheckoutForm = ({\n  stripePublicKey\n}) => {\n  _s();\n  const [stripe, setStripe] = useState(null);\n  const elements = useElements();\n  const [message, setMessage] = useState(\"\");\n\n  // Carga Stripe cuando stripePublicKey cambia\n  useEffect(() => {\n    if (stripePublicKey) {\n      loadStripe(stripePublicKey).then(stripeInstance => {\n        setStripe(stripeInstance);\n      });\n    }\n  }, [stripePublicKey]);\n\n  // Maneja la presentación del formulario\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      console.log(\"Stripe.js aún no ha cargado.\");\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    if (cardElement) {\n      const result = await stripe.createToken(cardElement);\n      if (result.error) {\n        console.log(result.error.message);\n        setMessage(result.error.message || \"Ocurrió un error desconocido.\");\n        Streamlit.setComponentValue({\n          token: 0,\n          message: result.error.message\n        });\n      } else {\n        console.log(\"Token generado: \" + result.token.id);\n        setMessage(\"Pago exitoso\");\n        Streamlit.setComponentValue({\n          token: result.token.id,\n          message: \"Pago exitoso\"\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente principal que integra el formulario en un componente de Streamlit\n_s(CheckoutForm, \"IL0rWuGZOoKA3uOPaSMXAhwBLuE=\", false, function () {\n  return [useElements];\n});\n_c = CheckoutForm;\nclass MyStripeComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      // Recupera la clave pública de Stripe pasada desde Python a través de las props\n      const stripePublicKey = this.props.args[\"stripe_public_key\"];\n      // Inicializa Stripe aquí. `loadStripe` devuelve una promesa que resuelve a un objeto Stripe o null, lo que es aceptable para `Elements`.\n      const stripePromise = loadStripe(stripePublicKey);\n      return /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n          stripePublicKey: stripePublicKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\n\n// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\nexport default _c2 = withStreamlitConnection(MyStripeComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","Elements","CardElement","useElements","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","CheckoutForm","stripePublicKey","_s","stripe","setStripe","elements","message","setMessage","then","stripeInstance","handleSubmit","event","preventDefault","console","log","cardElement","getElement","result","createToken","error","setComponentValue","token","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","MyStripeComponent","constructor","args","render","props","stripePromise","_c2","$RefreshReg$"],"sources":["C:/Users/Equipo/OneDrive/Bussines/AI-CONTENT/Mine/app/components/template - card/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { loadStripe, Stripe, StripeElements } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useElements } from '@stripe/react-stripe-js';\r\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\r\n\r\n// Define props para CheckoutForm para manejar la clave pública de Stripe\r\ninterface CheckoutFormProps {\r\n  stripePublicKey: string;\r\n}\r\n\r\n// Componente CheckoutForm para manejar la entrada del formulario de pago\r\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({ stripePublicKey }) => {\r\n  const [stripe, setStripe] = useState<Stripe | null>(null);\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Carga Stripe cuando stripePublicKey cambia\r\n  useEffect(() => {\r\n    if (stripePublicKey) {\r\n      loadStripe(stripePublicKey).then(stripeInstance => {\r\n        setStripe(stripeInstance);\r\n      });\r\n    }\r\n  }, [stripePublicKey]);\r\n\r\n  // Maneja la presentación del formulario\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      console.log(\"Stripe.js aún no ha cargado.\");\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n    if (cardElement) {\r\n      const result = await stripe.createToken(cardElement);\r\n\r\n      if (result.error) {\r\n        console.log(result.error.message);\r\n        setMessage(result.error.message || \"Ocurrió un error desconocido.\");\r\n        Streamlit.setComponentValue({ token: 0, message: result.error.message });\r\n      } else {\r\n        console.log(\"Token generado: \" + result.token.id);\r\n        setMessage(\"Pago exitoso\");\r\n        Streamlit.setComponentValue({ token: result.token.id, message: \"Pago exitoso\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe}>Pagar</button>\r\n      <div>{message}</div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// Componente principal que integra el formulario en un componente de Streamlit\r\nclass MyStripeComponent extends StreamlitComponentBase<any, any> {\r\n  public render = (): React.ReactNode => {\r\n    // Recupera la clave pública de Stripe pasada desde Python a través de las props\r\n    const stripePublicKey: string = this.props.args[\"stripe_public_key\"];\r\n    // Inicializa Stripe aquí. `loadStripe` devuelve una promesa que resuelve a un objeto Stripe o null, lo que es aceptable para `Elements`.\r\n    const stripePromise = loadStripe(stripePublicKey);\r\n    return (\r\n      <Elements stripe={stripePromise}>\r\n        <CheckoutForm stripePublicKey={stripePublicKey} />\r\n      </Elements>\r\n    );\r\n  }\r\n}\r\n\r\n// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\r\nexport default withStreamlitConnection(MyStripeComponent);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}