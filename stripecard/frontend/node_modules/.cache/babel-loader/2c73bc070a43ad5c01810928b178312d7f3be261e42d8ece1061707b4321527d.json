{"ast":null,"code":"import React,{useState}from'react';import{loadStripe}from'@stripe/stripe-js';import{Elements,CardElement,useElements}from'@stripe/react-stripe-js';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import Select from'react-select';import{countries}from'countries-list';// Define props para CheckoutForm para manejar la clave pública de Stripe\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const countryOptions=Object.keys(countries).map(code=>({value:code,label:countries[code].name}));// Componente CheckoutForm para manejar la entrada del formulario de pago\nconst CheckoutForm=_ref=>{let{stripe,stripePublicKey}=_ref;const elements=useElements();const[message,setMessage]=useState(\"\");const[name,setName]=useState(\"\");const[lastName,setLastName]=useState(\"\");const[phone,setPhone]=useState(\"\");const[address,setAddress]=useState(\"\");const[cardError,setCardError]=useState('');const[email,setEmail]=useState(\"\");const[city,setCity]=useState(\"\");const[country,setCountry]=useState(\"\");const[postalCode,setPostalCode]=useState(\"\");const[selectedCountry,setSelectedCountry]=useState(null);// Estilos para el CardElement, inputs y botn\nconst cardElementStyle={style:{base:{color:\"#495057\",fontFamily:'\"Helvetica Neue\", Helvetica, sans-serif',fontSmoothing:\"antialiased\",fontSize:\"16px\",\"::placeholder\":{color:\"#adb5bd\"},marginTop:\"20px\",marginBottom:\"20px\"},invalid:{color:\"#dc3545\",iconColor:\"#dc3545\"}},hidePostalCode:true};const formStyle={padding:\"30px\",margin:\"20px auto\",maxWidth:\"540px\",border:\"1px solid #dee2e6\",borderRadius:\"0.375rem\",boxShadow:\"0 4px 6px rgba(0,0,0,0.1)\"};// Estilo para inputs\nconst inputStyle={padding:\"10px 15px\",fontSize:\"16px\",border:\"1px solid #ddd\",borderRadius:\"4px\",outlineColor:\"#5469d4\",width:\"100%\",boxSizing:\"border-box\",// Esto asegura que TypeScript entienda el valor como un tipo válido.\nmarginTop:\"20px\"};// Estilo para el botón de submit\nconst submitButtonStyle={backgroundColor:\"#007bff\",color:\"white\",cursor:\"pointer\",fontWeight:\"bold\",border:\"none\",transition:\"background-color 0.2s, box-shadow 0.2s\",padding:\"12px 20px\",fontSize:\"1rem\",borderRadius:\"0.25rem\",outlineColor:\"#495057\",width:\"100%\",marginTop:\"20px\"};// Estilos para react-select\nconst customSelectStyles={control:(base,state)=>({...base,padding:'10px 15px',fontSize:'16px',border:'1px solid #ddd',borderRadius:'4px',boxShadow:state.isFocused?'0 0 0 1px #5469d4':0,\"&:hover\":{borderColor:state.isFocused?'#5469d4':'#ddd'}}),menu:base=>({...base,fontSize:'16px'}),option:(base,state)=>({...base,backgroundColor:state.isSelected?'#007bff':state.isFocused?'#e9ecef':'white',color:state.isSelected?'white':'black',\"&:active\":{backgroundColor:'#007bff',color:'white'}})};// Contenedor con margen para elementos individuales\nconst elementWrapperStyle={marginTop:\"20px\"};// Maneja la presentación del formulario\nconst handleSubmit=async event=>{event.preventDefault();if(!stripe||!elements){//console.log(\"Stripe.js aún no ha cargado.\");\nreturn;}if(!name||!lastName||!phone||!address){setMessage(\"Todos los campos son obligatorios\");return;}const cardElement=elements.getElement(CardElement);if(cardElement){const{error,paymentMethod}=await stripe.createPaymentMethod({type:'card',card:cardElement,billing_details:{name:\"\".concat(name,\" \").concat(lastName),email:email,phone:phone,address:{line1:address,city:city,country:selectedCountry?selectedCountry.value:'',postal_code:postalCode}}});if(error){if(error.message!==undefined){setCardError(error.message);}else{setCardError(\"Ocurrió un error desconocido en procesar el pago.\");Streamlit.setComponentValue({paymentMethodID:null,message:\"Error en recoger los datos: no se puede realizar la transaccion\"});}}else{setCardError('');Streamlit.setComponentValue({paymentMethodID:paymentMethod.id,message:\"Pago en proceso: conectando con el setrvidor de pago\"});}}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:formStyle,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),placeholder:\"Nombre\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:lastName,onChange:e=>setLastName(e.target.value),placeholder:\"Apellidos\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:phone,onChange:e=>setPhone(e.target.value),placeholder:\"Tel\\xE9fono\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:address,onChange:e=>setAddress(e.target.value),placeholder:\"Direcci\\xF3n\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Correo electr\\xF3nico\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:city,onChange:e=>setCity(e.target.value),placeholder:\"Ciudad\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:postalCode,onChange:e=>setPostalCode(e.target.value),placeholder:\"C\\xF3digo Postal\",required:true,style:inputStyle}),/*#__PURE__*/_jsx(\"div\",{style:elementWrapperStyle,children:/*#__PURE__*/_jsx(Select,{options:countryOptions,value:selectedCountry,onChange:selectedOption=>{if(selectedOption!==null){setSelectedCountry(selectedOption);setCountry(selectedOption.value);}else{// Manejar el caso en que no haya selección (opcional)\nsetSelectedCountry(null);setCountry(\"\");}},placeholder:\"Selecciona el pais\",styles:customSelectStyles,required:true})}),/*#__PURE__*/_jsx(\"div\",{style:elementWrapperStyle,children:/*#__PURE__*/_jsx(CardElement,{options:cardElementStyle,onChange:event=>{if(event.error){setCardError(event.error.message);}else{setCardError('');// Limpiar errores si el usuario corrige el error en el CardElement\n}}})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!stripe,style:submitButtonStyle,children:\"Pagar\"}),/*#__PURE__*/_jsxs(\"div\",{children:[message,cardError&&/*#__PURE__*/_jsx(\"div\",{children:cardError})]})]});};// Componente principal que integra el formulario en un componente de Streamlit\nclass MyStripeComponent extends StreamlitComponentBase{constructor(){super(...arguments);this.state={stripe:null};this.render=()=>{const{stripe}=this.state;// Recupera la clave pública de Stripe pasada desde Python a través de las props\nconst stripePublicKey=this.props.args[\"stripe_public_key\"];return/*#__PURE__*/_jsxs(Elements,{stripe:stripe,children:[/*#__PURE__*/_jsx(\"div\",{children:\" \"}),stripe&&/*#__PURE__*/_jsx(CheckoutForm,{stripe:stripe,stripePublicKey:stripePublicKey}),/*#__PURE__*/_jsx(\"br\",{})]});};}componentDidMount(){const{stripe_public_key:stripePublicKey}=this.props.args;loadStripe(stripePublicKey).then(stripe=>this.setState({stripe}));}}// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\nexport default withStreamlitConnection(MyStripeComponent);","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useElements","Streamlit","StreamlitComponentBase","withStreamlitConnection","Select","countries","jsx","_jsx","jsxs","_jsxs","countryOptions","Object","keys","map","code","value","label","name","CheckoutForm","_ref","stripe","stripePublicKey","elements","message","setMessage","setName","lastName","setLastName","phone","setPhone","address","setAddress","cardError","setCardError","email","setEmail","city","setCity","country","setCountry","postalCode","setPostalCode","selectedCountry","setSelectedCountry","cardElementStyle","style","base","color","fontFamily","fontSmoothing","fontSize","marginTop","marginBottom","invalid","iconColor","hidePostalCode","formStyle","padding","margin","maxWidth","border","borderRadius","boxShadow","inputStyle","outlineColor","width","boxSizing","submitButtonStyle","backgroundColor","cursor","fontWeight","transition","customSelectStyles","control","state","isFocused","borderColor","menu","option","isSelected","elementWrapperStyle","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","billing_details","concat","line1","postal_code","undefined","setComponentValue","paymentMethodID","id","onSubmit","children","onChange","e","target","placeholder","required","options","selectedOption","styles","disabled","MyStripeComponent","constructor","arguments","render","props","args","componentDidMount","stripe_public_key","then","setState"],"sources":["C:/Users/Equipo/OneDrive/Bussines/AI-CONTENT/Mine/app/components/template - card/stripecard/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { loadStripe, Stripe, StripeElements } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useElements } from '@stripe/react-stripe-js';\r\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\r\nimport Select from 'react-select';\r\nimport { countries } from 'countries-list';\r\n\r\n\r\n// Define props para CheckoutForm para manejar la clave pública de Stripe\r\ninterface CheckoutFormProps {\r\n  stripePublicKey: string;\r\n  stripe: Stripe | null;\r\n}\r\ninterface TCountries {\r\n  [code: string]: { name: string; }; // Asume que cada país tiene al menos un nombre.\r\n}\r\nconst countryOptions = Object.keys(countries).map((code) => ({\r\n  value: code,\r\n  label: (countries as TCountries)[code].name,\r\n}));\r\n\r\n// Componente CheckoutForm para manejar la entrada del formulario de pago\r\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({ stripe,stripePublicKey }) => {\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [cardError, setCardError] = useState('');\r\n  const [email, setEmail] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState<{ value: string; label: string; } | null>(null);\r\n\r\n\r\n   // Estilos para el CardElement, inputs y botn\r\n   const cardElementStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#495057\",\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#adb5bd\"\r\n        },\r\n        marginTop: \"20px\", \r\n        marginBottom: \"20px\", \r\n      },\r\n      invalid: {\r\n        color: \"#dc3545\",\r\n        iconColor: \"#dc3545\"\r\n      }\r\n    },\r\n    hidePostalCode: true\r\n  };\r\n  \r\n  const formStyle = {\r\n    padding: \"30px\", \r\n    margin: \"20px auto\", \r\n    maxWidth: \"540px\", \r\n    border: \"1px solid #dee2e6\", \r\n    borderRadius: \"0.375rem\", \r\n    boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\" \r\n  };\r\n  \r\n\r\n// Estilo para inputs\r\nconst inputStyle: React.CSSProperties = {\r\n  padding: \"10px 15px\",\r\n  fontSize: \"16px\",\r\n  border: \"1px solid #ddd\",\r\n  borderRadius: \"4px\",\r\n  outlineColor: \"#5469d4\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\" as \"border-box\", // Esto asegura que TypeScript entienda el valor como un tipo válido.\r\n  marginTop: \"20px\", \r\n\r\n};\r\n\r\n\r\n\r\n// Estilo para el botón de submit\r\nconst submitButtonStyle = {\r\n  backgroundColor: \"#007bff\",\r\n  color: \"white\",\r\n  cursor: \"pointer\",\r\n  fontWeight: \"bold\",\r\n  border: \"none\",\r\n  transition: \"background-color 0.2s, box-shadow 0.2s\",\r\n  padding: \"12px 20px\",\r\n  fontSize: \"1rem\",\r\n  borderRadius: \"0.25rem\",\r\n  outlineColor: \"#495057\",\r\n  width: \"100%\",\r\n  marginTop: \"20px\", \r\n};\r\n\r\n// Estilos para react-select\r\nconst customSelectStyles = {\r\n  control: (base: any, state: any) => ({\r\n    ...base,\r\n    padding: '10px 15px',\r\n    fontSize: '16px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '4px',\r\n    boxShadow: state.isFocused ? '0 0 0 1px #5469d4' : 0,\r\n    \"&:hover\": {\r\n      borderColor: state.isFocused ? '#5469d4' : '#ddd'\r\n    }\r\n  }),\r\n  menu: (base: any) => ({\r\n    ...base,\r\n    fontSize: '16px',\r\n  }),\r\n  option: (base: any, state: any) => ({\r\n    ...base,\r\n    backgroundColor: state.isSelected ? '#007bff' : state.isFocused ? '#e9ecef' : 'white',\r\n    color: state.isSelected ? 'white' : 'black',\r\n    \"&:active\": {\r\n      backgroundColor: '#007bff',\r\n      color: 'white',\r\n    }\r\n  }),\r\n};\r\n\r\n// Contenedor con margen para elementos individuales\r\nconst elementWrapperStyle = {\r\n  marginTop: \"20px\", \r\n};\r\n\r\n  // Maneja la presentación del formulario\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      //console.log(\"Stripe.js aún no ha cargado.\");\r\n      return;\r\n    }\r\n\r\n    if (!name || !lastName || !phone || !address) {\r\n      setMessage(\"Todos los campos son obligatorios\");\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n    \r\n    \r\n    if (cardElement) {\r\n\r\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: cardElement,\r\n        billing_details: {\r\n          name: `${name} ${lastName}`,\r\n          email: email, \r\n          phone: phone,\r\n          address: { \r\n            line1: address, \r\n            city: city,\r\n            country: selectedCountry ? selectedCountry.value : '',\r\n            postal_code: postalCode, \r\n          }\r\n        },\r\n      });\r\n  \r\n      if (error) {\r\n        if (error.message !== undefined) {\r\n          setCardError(error.message);\r\n        } else {\r\n          setCardError(\"Ocurrió un error desconocido en procesar el pago.\");\r\n          Streamlit.setComponentValue({ paymentMethodID: null, message: \"Error en recoger los datos: no se puede realizar la transaccion\" });\r\n\r\n        }\r\n      } else {\r\n        setCardError('');\r\n        \r\n        Streamlit.setComponentValue({ paymentMethodID: paymentMethod.id, message: \"Pago en proceso: conectando con el setrvidor de pago\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={formStyle}>\r\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Nombre\" required style={inputStyle}/>\r\n      <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} placeholder=\"Apellidos\" required style={inputStyle}/>\r\n      <input type=\"tel\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Teléfono\" required style={inputStyle}/>\r\n      <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} placeholder=\"Dirección\" required style={inputStyle}/>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Correo electrónico\" required style={inputStyle}/>\r\n      <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Ciudad\" required style={inputStyle}/>\r\n        <input type=\"text\" value={postalCode} onChange={(e) => setPostalCode(e.target.value)} placeholder=\"Código Postal\" required style={inputStyle}/>\r\n      <div style={elementWrapperStyle}>\r\n        <Select\r\n          options={countryOptions}\r\n          value={selectedCountry}\r\n          onChange={(selectedOption) => {\r\n            if (selectedOption !== null) {\r\n              setSelectedCountry(selectedOption);\r\n              setCountry(selectedOption.value);\r\n            } else {\r\n              // Manejar el caso en que no haya selección (opcional)\r\n              setSelectedCountry(null);\r\n              setCountry(\"\");\r\n            }\r\n          }}\r\n          placeholder=\"Selecciona el pais\"\r\n          styles={customSelectStyles}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div style={elementWrapperStyle}>\r\n        <CardElement options={cardElementStyle} onChange={(event) => {\r\n          if (event.error) {\r\n            setCardError(event.error.message);\r\n          } else {\r\n            setCardError(''); // Limpiar errores si el usuario corrige el error en el CardElement\r\n          }\r\n        }} />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={!stripe} style={submitButtonStyle}>Pagar</button>\r\n      <div>{message} \r\n      {cardError && \r\n      <div>{cardError}</div>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// Componente principal que integra el formulario en un componente de Streamlit\r\nclass MyStripeComponent extends StreamlitComponentBase<any, any> {\r\n\r\n  state = {\r\n    stripe: null,\r\n  };\r\n  componentDidMount() {\r\n    const { stripe_public_key: stripePublicKey } = this.props.args;\r\n    loadStripe(stripePublicKey).then(stripe => this.setState({ stripe }));\r\n  }\r\n  public render = (): React.ReactNode => {\r\n    const { stripe } = this.state;\r\n    // Recupera la clave pública de Stripe pasada desde Python a través de las props\r\n    const stripePublicKey: string = this.props.args[\"stripe_public_key\"];\r\n    \r\n    return (\r\n      <Elements stripe={stripe}>\r\n        <div> </div>\r\n         {stripe && <CheckoutForm stripe={stripe} stripePublicKey={stripePublicKey} />}\r\n         <br></br>\r\n      </Elements>\r\n    );\r\n  }\r\n}\r\n\r\n// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\r\nexport default withStreamlitConnection(MyStripeComponent);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}