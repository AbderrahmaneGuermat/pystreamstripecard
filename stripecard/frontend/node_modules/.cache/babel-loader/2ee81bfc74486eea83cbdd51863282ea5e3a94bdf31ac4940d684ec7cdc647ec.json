{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\OneDrive\\\\Bussines\\\\AI-CONTENT\\\\Mine\\\\app\\\\components\\\\template - card\\\\stripecard\\\\frontend\\\\src\\\\MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useElements } from '@stripe/react-stripe-js';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport Select from 'react-select';\nimport { countries } from 'countries-list';\n\n// Define props para CheckoutForm para manejar la clave pública de Stripe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryOptions = Object.keys(countries).map(code => ({\n  value: code,\n  label: countries[code].name\n}));\n\n// Componente CheckoutForm para manejar la entrada del formulario de pago\nconst CheckoutForm = ({\n  stripe,\n  stripePublicKey\n}) => {\n  _s();\n  const elements = useElements();\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [cardError, setCardError] = useState('');\n  const [email, setEmail] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  // Estilos para el CardElement, inputs y botn\n  const cardElementStyle = {\n    style: {\n      base: {\n        color: \"#495057\",\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#adb5bd\"\n        },\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      invalid: {\n        color: \"#dc3545\",\n        iconColor: \"#dc3545\"\n      }\n    },\n    hidePostalCode: true\n  };\n  const formStyle = {\n    padding: \"30px\",\n    margin: \"20px auto\",\n    maxWidth: \"540px\",\n    border: \"1px solid #dee2e6\",\n    borderRadius: \"0.375rem\",\n    boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\"\n  };\n\n  // Estilo para inputs\n  const inputStyle = {\n    padding: \"10px 15px\",\n    fontSize: \"16px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    outlineColor: \"#5469d4\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    // Esto asegura que TypeScript entienda el valor como un tipo válido.\n    marginTop: \"20px\"\n  };\n\n  // Estilo para el botón de submit\n  const submitButtonStyle = {\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    transition: \"background-color 0.2s, box-shadow 0.2s\",\n    padding: \"12px 20px\",\n    fontSize: \"1rem\",\n    borderRadius: \"0.25rem\",\n    outlineColor: \"#495057\",\n    width: \"100%\",\n    marginTop: \"20px\"\n  };\n\n  // Estilos para react-select\n  const customSelectStyles = {\n    control: (base, state) => ({\n      ...base,\n      padding: '10px 15px',\n      fontSize: '16px',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      boxShadow: state.isFocused ? '0 0 0 1px #5469d4' : 0,\n      \"&:hover\": {\n        borderColor: state.isFocused ? '#5469d4' : '#ddd'\n      }\n    }),\n    menu: base => ({\n      ...base,\n      fontSize: '16px'\n    }),\n    option: (base, state) => ({\n      ...base,\n      backgroundColor: state.isSelected ? '#007bff' : state.isFocused ? '#e9ecef' : 'white',\n      color: state.isSelected ? 'white' : 'black',\n      \"&:active\": {\n        backgroundColor: '#007bff',\n        color: 'white'\n      }\n    })\n  };\n\n  // Contenedor con margen para elementos individuales\n  const elementWrapperStyle = {\n    marginTop: \"20px\"\n  };\n\n  // Maneja la presentación del formulario\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      console.log(\"Stripe.js aún no ha cargado.\");\n      return;\n    }\n    if (!name || !lastName || !phone || !address) {\n      setMessage(\"Todos los campos son obligatorios\");\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    if (cardElement) {\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          name: `${name} ${lastName}`,\n          email: email,\n          phone: phone,\n          address: {\n            line1: address,\n            city: city,\n            country: selectedCountry ? selectedCountry.value : '',\n            postal_code: postalCode\n          }\n        }\n      });\n      if (error) {\n        if (error.message !== undefined) {\n          setCardError(error.message);\n        } else {\n          setCardError(\"Ocurrió un error desconocido en procesar el pago.\");\n          Streamlit.setComponentValue({\n            paymentMethodID: null,\n            message: \"Error en recoger los datos: no se puede realizar la transaccion\"\n          });\n        }\n      } else {\n        setCardError('');\n        Streamlit.setComponentValue({\n          paymentMethodID: paymentMethod.id,\n          message: \"Pago en proceso: conectando con el setrvidor de pago\"\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: formStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Nombre\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value),\n      placeholder: \"Apellidos\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      placeholder: \"Tel\\xE9fono\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Direcci\\xF3n\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Correo electr\\xF3nico\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Ciudad\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: postalCode,\n      onChange: e => setPostalCode(e.target.value),\n      placeholder: \"C\\xF3digo Postal\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: elementWrapperStyle,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: countryOptions,\n        value: selectedCountry,\n        onChange: selectedOption => {\n          if (selectedOption !== null) {\n            setSelectedCountry(selectedOption);\n            setCountry(selectedOption.value);\n          } else {\n            // Manejar el caso en que no haya selección (opcional)\n            setSelectedCountry(null);\n            setCountry(\"\");\n          }\n        },\n        placeholder: \"Selecciona el pais\",\n        styles: customSelectStyles,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: elementWrapperStyle,\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        options: cardElementStyle,\n        onChange: event => {\n          if (event.error) {\n            setCardError(event.error.message);\n          } else {\n            setCardError(''); // Limpiar errores si el usuario corrige el error en el CardElement\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      style: submitButtonStyle,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message, cardError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cardError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente principal que integra el formulario en un componente de Streamlit\n_s(CheckoutForm, \"vOMyorypFm20pa1Z3P8dyluGgMk=\", false, function () {\n  return [useElements];\n});\n_c = CheckoutForm;\nclass MyStripeComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stripe: null\n    };\n    this.render = () => {\n      const {\n        stripe\n      } = this.state;\n      // Recupera la clave pública de Stripe pasada desde Python a través de las props\n      const stripePublicKey = this.props.args[\"stripe_public_key\"];\n      return /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripe,\n        children: stripe && /*#__PURE__*/_jsxDEV(CheckoutForm, {\n          stripe: stripe,\n          stripePublicKey: stripePublicKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  componentDidMount() {\n    const {\n      stripe_public_key: stripePublicKey\n    } = this.props.args;\n    loadStripe(stripePublicKey).then(stripe => this.setState({\n      stripe\n    }));\n  }\n}\n\n// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\nexport default _c2 = withStreamlitConnection(MyStripeComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useElements","Streamlit","StreamlitComponentBase","withStreamlitConnection","Select","countries","jsxDEV","_jsxDEV","countryOptions","Object","keys","map","code","value","label","name","CheckoutForm","stripe","stripePublicKey","_s","elements","message","setMessage","setName","lastName","setLastName","phone","setPhone","address","setAddress","cardError","setCardError","email","setEmail","city","setCity","country","setCountry","postalCode","setPostalCode","selectedCountry","setSelectedCountry","cardElementStyle","style","base","color","fontFamily","fontSmoothing","fontSize","marginTop","marginBottom","invalid","iconColor","hidePostalCode","formStyle","padding","margin","maxWidth","border","borderRadius","boxShadow","inputStyle","outlineColor","width","boxSizing","submitButtonStyle","backgroundColor","cursor","fontWeight","transition","customSelectStyles","control","state","isFocused","borderColor","menu","option","isSelected","elementWrapperStyle","handleSubmit","event","preventDefault","console","log","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","billing_details","line1","postal_code","undefined","setComponentValue","paymentMethodID","id","onSubmit","children","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","options","selectedOption","styles","disabled","_c","MyStripeComponent","constructor","args","render","props","componentDidMount","stripe_public_key","then","setState","_c2","$RefreshReg$"],"sources":["C:/Users/Equipo/OneDrive/Bussines/AI-CONTENT/Mine/app/components/template - card/stripecard/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { loadStripe, Stripe, StripeElements } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useElements } from '@stripe/react-stripe-js';\r\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\r\nimport Select from 'react-select';\r\nimport { countries } from 'countries-list';\r\n\r\n\r\n// Define props para CheckoutForm para manejar la clave pública de Stripe\r\ninterface CheckoutFormProps {\r\n  stripePublicKey: string;\r\n  stripe: Stripe | null;\r\n}\r\ninterface TCountries {\r\n  [code: string]: { name: string; }; // Asume que cada país tiene al menos un nombre.\r\n}\r\nconst countryOptions = Object.keys(countries).map((code) => ({\r\n  value: code,\r\n  label: (countries as TCountries)[code].name,\r\n}));\r\n\r\n// Componente CheckoutForm para manejar la entrada del formulario de pago\r\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({ stripe,stripePublicKey }) => {\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [cardError, setCardError] = useState('');\r\n  const [email, setEmail] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState<{ value: string; label: string; } | null>(null);\r\n\r\n\r\n   // Estilos para el CardElement, inputs y botn\r\n   const cardElementStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#495057\",\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#adb5bd\"\r\n        },\r\n        marginTop: \"20px\", \r\n        marginBottom: \"20px\", \r\n      },\r\n      invalid: {\r\n        color: \"#dc3545\",\r\n        iconColor: \"#dc3545\"\r\n      }\r\n    },\r\n    hidePostalCode: true\r\n  };\r\n  \r\n  const formStyle = {\r\n    padding: \"30px\", \r\n    margin: \"20px auto\", \r\n    maxWidth: \"540px\", \r\n    border: \"1px solid #dee2e6\", \r\n    borderRadius: \"0.375rem\", \r\n    boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\" \r\n  };\r\n  \r\n\r\n// Estilo para inputs\r\nconst inputStyle: React.CSSProperties = {\r\n  padding: \"10px 15px\",\r\n  fontSize: \"16px\",\r\n  border: \"1px solid #ddd\",\r\n  borderRadius: \"4px\",\r\n  outlineColor: \"#5469d4\",\r\n  width: \"100%\",\r\n  boxSizing: \"border-box\" as \"border-box\", // Esto asegura que TypeScript entienda el valor como un tipo válido.\r\n  marginTop: \"20px\", \r\n\r\n};\r\n\r\n\r\n\r\n// Estilo para el botón de submit\r\nconst submitButtonStyle = {\r\n  backgroundColor: \"#007bff\",\r\n  color: \"white\",\r\n  cursor: \"pointer\",\r\n  fontWeight: \"bold\",\r\n  border: \"none\",\r\n  transition: \"background-color 0.2s, box-shadow 0.2s\",\r\n  padding: \"12px 20px\",\r\n  fontSize: \"1rem\",\r\n  borderRadius: \"0.25rem\",\r\n  outlineColor: \"#495057\",\r\n  width: \"100%\",\r\n  marginTop: \"20px\", \r\n};\r\n\r\n// Estilos para react-select\r\nconst customSelectStyles = {\r\n  control: (base: any, state: any) => ({\r\n    ...base,\r\n    padding: '10px 15px',\r\n    fontSize: '16px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '4px',\r\n    boxShadow: state.isFocused ? '0 0 0 1px #5469d4' : 0,\r\n    \"&:hover\": {\r\n      borderColor: state.isFocused ? '#5469d4' : '#ddd'\r\n    }\r\n  }),\r\n  menu: (base: any) => ({\r\n    ...base,\r\n    fontSize: '16px',\r\n  }),\r\n  option: (base: any, state: any) => ({\r\n    ...base,\r\n    backgroundColor: state.isSelected ? '#007bff' : state.isFocused ? '#e9ecef' : 'white',\r\n    color: state.isSelected ? 'white' : 'black',\r\n    \"&:active\": {\r\n      backgroundColor: '#007bff',\r\n      color: 'white',\r\n    }\r\n  }),\r\n};\r\n\r\n// Contenedor con margen para elementos individuales\r\nconst elementWrapperStyle = {\r\n  marginTop: \"20px\", \r\n};\r\n\r\n  // Maneja la presentación del formulario\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      console.log(\"Stripe.js aún no ha cargado.\");\r\n      return;\r\n    }\r\n\r\n    if (!name || !lastName || !phone || !address) {\r\n      setMessage(\"Todos los campos son obligatorios\");\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n    \r\n    \r\n    if (cardElement) {\r\n\r\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: cardElement,\r\n        billing_details: {\r\n          name: `${name} ${lastName}`,\r\n          email: email, \r\n          phone: phone,\r\n          address: { \r\n            line1: address, \r\n            city: city,\r\n            country: selectedCountry ? selectedCountry.value : '',\r\n            postal_code: postalCode, \r\n          }\r\n        },\r\n      });\r\n  \r\n      if (error) {\r\n        if (error.message !== undefined) {\r\n          setCardError(error.message);\r\n        } else {\r\n          setCardError(\"Ocurrió un error desconocido en procesar el pago.\");\r\n          Streamlit.setComponentValue({ paymentMethodID: null, message: \"Error en recoger los datos: no se puede realizar la transaccion\" });\r\n\r\n        }\r\n      } else {\r\n        setCardError('');\r\n        \r\n        Streamlit.setComponentValue({ paymentMethodID: paymentMethod.id, message: \"Pago en proceso: conectando con el setrvidor de pago\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={formStyle}>\r\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Nombre\" required style={inputStyle}/>\r\n      <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} placeholder=\"Apellidos\" required style={inputStyle}/>\r\n      <input type=\"tel\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Teléfono\" required style={inputStyle}/>\r\n      <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} placeholder=\"Dirección\" required style={inputStyle}/>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Correo electrónico\" required style={inputStyle}/>\r\n      <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Ciudad\" required style={inputStyle}/>\r\n        <input type=\"text\" value={postalCode} onChange={(e) => setPostalCode(e.target.value)} placeholder=\"Código Postal\" required style={inputStyle}/>\r\n      <div style={elementWrapperStyle}>\r\n        <Select\r\n          options={countryOptions}\r\n          value={selectedCountry}\r\n          onChange={(selectedOption) => {\r\n            if (selectedOption !== null) {\r\n              setSelectedCountry(selectedOption);\r\n              setCountry(selectedOption.value);\r\n            } else {\r\n              // Manejar el caso en que no haya selección (opcional)\r\n              setSelectedCountry(null);\r\n              setCountry(\"\");\r\n            }\r\n          }}\r\n          placeholder=\"Selecciona el pais\"\r\n          styles={customSelectStyles}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div style={elementWrapperStyle}>\r\n        <CardElement options={cardElementStyle} onChange={(event) => {\r\n          if (event.error) {\r\n            setCardError(event.error.message);\r\n          } else {\r\n            setCardError(''); // Limpiar errores si el usuario corrige el error en el CardElement\r\n          }\r\n        }} />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={!stripe} style={submitButtonStyle}>Pagar</button>\r\n      <div>{message} \r\n      {cardError && \r\n      <div>{cardError}</div>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// Componente principal que integra el formulario en un componente de Streamlit\r\nclass MyStripeComponent extends StreamlitComponentBase<any, any> {\r\n\r\n  state = {\r\n    stripe: null,\r\n  };\r\n  componentDidMount() {\r\n    const { stripe_public_key: stripePublicKey } = this.props.args;\r\n    loadStripe(stripePublicKey).then(stripe => this.setState({ stripe }));\r\n  }\r\n  public render = (): React.ReactNode => {\r\n    const { stripe } = this.state;\r\n    // Recupera la clave pública de Stripe pasada desde Python a través de las props\r\n    const stripePublicKey: string = this.props.args[\"stripe_public_key\"];\r\n    \r\n    return (\r\n      <Elements stripe={stripe}>\r\n         {stripe && <CheckoutForm stripe={stripe} stripePublicKey={stripePublicKey} />}\r\n      </Elements>\r\n    );\r\n  }\r\n}\r\n\r\n// Envuelve MyStripeComponent con withStreamlitConnection para la integración con Streamlit\r\nexport default withStreamlitConnection(MyStripeComponent);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}